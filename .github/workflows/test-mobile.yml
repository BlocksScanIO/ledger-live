name: "[Test] Mobile App"

on:
  push:
    branches:
      - main
      - develop
      - release
      - hotfix
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  codecheck:
    name: "Ledger Live Mobile CodeCheck"
    env:
      NODE_OPTIONS: "--max-old-space-size=7168"
      FORCE_COLOR: 3
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: latest
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: pnpm
          cache-dependency-path: "**/pnpm-lock.yaml"
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7
      - name: Bump npm to latest
        run: npm i -g npm@8.12.2
      - name: Install dependencies
        run: pnpm i --filter="live-mobile..." --filter="ledger-live" --no-frozen-lockfile --unsafe-perm
      - name: Run linter
        run: pnpm lint --filter="live-mobile" --api="http://127.0.0.1:${{ steps.turborepo-cache-server.outputs.port }}" --token="yolo" --team="foo"
      # - name: Run code checkers
      #   run: pnpm typecheck --filter="live-mobile" --api="http://127.0.0.1:9080" --token="yolo" --team="foo"
  
  detox-tests-ios:
    name: "Ledger Live Mobile - iOS Detox Tests"
    runs-on: macos-latest
    env:
      NODE_OPTIONS: "--max-old-space-size=7168"
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha || github.event.push.head.sha }}
      - uses: pnpm/action-setup@v2.1.0
        with:
          version: latest
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: pnpm
          cache-dependency-path: "**/pnpm-lock.yaml"
      - name: Install applesimutils
        run: |
          brew tap wix/brew
          brew install applesimutils
      - name: bump npm
        run: npm i -g npm@8.12.2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7
      - name: install dependencies
        run: pnpm i --filter="live-mobile..." --filter="ledger-live" --no-frozen-lockfile --unsafe-perm
      - name: Build dependencies
        run: pnpm build:llm:deps
      - name: Clear and build detox cache # investigate how to properly cache this
        run: pnpm mobile detox clean-framework-cache && pnpm mobile detox build-framework-cache
      - name: Build iOS app for Detox test run
        run: pnpm mobile e2e:build -c ios.sim.release
      - name: Create Simulator Log
        # With a little delay so the detox test below has time to spawn it, missing the first part of boot is fine
        # If you boot the simulator separately from detox, some other race fails and detox testee never sends ready to proxy
        continue-on-error: true
        run: nohup sh -c "sleep 15 && xcrun simctl spawn booted log stream --style compact > simulator.log 2>&1 &"
      - name: Test iOS app
        run: pnpm mobile e2e:test -c ios.sim.release --loglevel verbose --record-logs all --record-timeline all --take-screenshots all --record-videos failing --record-performance all
      - name: Compress Simulator Log
        if: always()
        run: gzip -9 simulator.log
      - name: Upload Simulator Log
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: simulator_log
          path: simulator.log.gz
      - name: Upload test artifacts
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: test-ios-artifacts
          path: apps/ledger-live-mobile/artifacts

  # detox-tests-android:
  #   name: "Ledger Live Mobile - Android Detox Tests"
  #   runs-on: macos-latest
  #   env:
  #     NODE_OPTIONS: "--max-old-space-size=7168"
  #   steps:
  #     - name: checkout
  #       uses: actions/checkout@v3
  #     - uses: pnpm/action-setup@v2.1.0
  #       with:
  #         version: latest
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: 16.x
  #         cache: pnpm
  #         cache-dependency-path: "**/pnpm-lock.yaml"
  #     - name: bump npm
  #       run: npm i -g npm@8.12.2
  #     - uses: ruby/setup-ruby@v1
  #       with:
  #         ruby-version: 2.7
  #       env:
  #         ImageOS: ubuntu20
  #     - name: setup JDK 11
  #       uses: actions/setup-java@v3
  #       with:
  #         distribution: 'zulu'
  #         java-version: '11'
  #         cache: 'gradle'
  #     - name: setup Android SDK
  #       uses: android-actions/setup-android@v2.0.8
  #     - name: Install dependencies
  #       run: pnpm i --filter="live-mobile..." --filter="ledger-live" --no-frozen-lockfile --unsafe-perm
  #     - name: Build dependencies
  #       run: pnpm build:llm:deps     
  #     # May be taken care of by the `setup-java` action caching
  #     - name: Gradle cache
  #       uses: gradle/gradle-build-action@v2
  #     - name: Clear and build detox cache # investigate how to properly cache this
  #       run: pnpm mobile detox clean-framework-cache && pnpm mobile detox build-framework-cache
  #     - name: AVD cache
  #       uses: actions/cache@v3
  #       id: avd-cache
  #       with:
  #         path: |
  #           ~/.android/avd/*
  #           ~/.android/adb*
  #         key: avd-30
  #     - name: create AVD and generate snapshot for caching
  #       if: steps.avd-cache.outputs.cache-hit != 'true'
  #       uses: reactivecircus/android-emulator-runner@v2
  #       with:
  #         api-level: 30
  #         arch: x86_64
  #         force-avd-creation: false
  #         # emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
  #         # disable-animations: false
  #         ram-size: 4096M
  #         script: echo "Generated AVD snapshot for caching."
  #     - name: Build Android app for Detox test run
  #       run: pnpm mobile e2e:build -c android.emu.release       
  #     - name: Run Android tests
  #       uses: reactivecircus/android-emulator-runner@v2
  #       timeout-minutes: 15
  #       with:
  #         api-level: 30
  #         arch: x86_64
  #         avd-name: Nexus_6
  #         # emulator-options: -verbose -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
  #         ram-size: 4096M
  #         script: |
  #           nohup sh -c "/Users/runner/Library/Android/sdk/platform-tools/adb logcat '*:D' > adb-log.txt" &
  #           pnpm mobile e2e:test -c android.emu.release --loglevel verbose --record-logs all --record-timeline all --take-screenshots all --record-videos failing
  #     - name: Compress Emulator Log
  #       if: always()
  #       run: gzip -9 adb-log.txt
  #       shell: bash
  #     - name: Upload Emulator Log
  #       uses: actions/upload-artifact@v2
  #       if: always()
  #       with:
  #         name: adb_logs
  #         path: adb-log.txt.gz
  #     - name: Upload test artifacts
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: test-android-artifacts
  #         path: apps/ledger-live-mobile/e2e/artifacts
          
