name: "[Testing] 'Dynamic cal importer'"
on:
  workflow_dispatch:
  push:
    branches:
      - LIVE-2174-dynamic-cal

concurrency:
  group: bot-dyn-cal

jobs:
  start-runner:
    name: "start ec2 instance (Linux)"
    runs-on: [self-hosted, ledger-live-assets]
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
      ec2-running: ${{ steps.set-ec2-running-output.outputs.ec2-running }}
    steps:
      - name: configure AWS credentials
        id: configure-aws-credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_STG }}:role/ledger-live-assets-sa-role
          aws-region: eu-west-1
          role-duration-seconds: 3600
          role-session-name: ledger-live-assets
      - name: start ec2 runner
        id: start-ec2-runner
        if: steps.configure-aws-credentials.outcome == 'success'
        uses: LedgerHQ/actions/ec2-linux-runner@main
        with:
          mode: start
          github-token: ${{ secrets.CI_BOT_TOKEN }}
          project: 2092
          ami-name-filter: ledger-live-runner
          instance-type: t3.medium
          instance-volume-size: 30
          subnet-id: subnet-0e2d6401ff98ec8a6
          security-group-id: sg-0c84fb8212c15d469
      - name: Set `ec2-running` output
        id: set-ec2-running-output
        run: echo "::set-output name=ec2-running::${{ steps.start-ec2-runner.outcome == 'success' }}"

  stop-runner:
    name: "stop ec2 instance (Linux)"
    needs: [start-runner, run-bot]
    runs-on: [self-hosted, ledger-live-assets]
    if: ${{ always() && needs.start-runner.outputs.ec2-running == 'true' }}
    steps:
      - name: Configure AWS credentials
        id: configure-aws-credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_STG }}:role/ledger-live-assets-sa-role
          aws-region: eu-west-1
          role-duration-seconds: 3600
          role-session-name: ledger-live-assets
      - name: stop ec2 runner
        uses: LedgerHQ/actions/ec2-linux-runner@main
        with:
          mode: stop
          github-token: ${{ secrets.CI_BOT_TOKEN }}
          label: ${{ needs.start-runner.outputs.label }}
          ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}

  run-bot:
    runs-on: ${{ needs.start-runner.outputs.label }}
    if: ${{ needs.start-runner.outputs.ec2-running == 'true' }}
    needs: [start-runner]
    steps:
      - uses: actions/checkout@v3
      - name: Retrieving crypto-assets
        uses: actions/checkout@v3
        with:
          submodules: true
          repository: LedgerHQ/crypto-assets
          token: ${{ secrets.CI_BOT_TOKEN }}
          path: crypto-assets
      - uses: pnpm/action-setup@v2.0.1
        with:
          version: latest
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: pnpm
          cache-dependency-path: "**/pnpm-lock.yaml"
      - name: install and build
        continue-on-error: true
        run: |
          pnpm i --filter="live-cli..." --filter="ledger-live" --filter="ledger-libs" --frozen-lockfile
          pnpm build:ljs
        shell: bash
      - name: run script
        run: |
          mkdir calreport
          node libs/ledgerjs/script/crypto-assets-importer/index.js $PWD/crypto-assets
      - name: upload logs to github artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: calreport
          path: libs/ledgerjs/packages/cryptoassets/data/
