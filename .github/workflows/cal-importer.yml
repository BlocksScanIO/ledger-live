name: "[S3 Staging] 'Dynamic cal importer'"
on:
  workflow_dispatch:
  push:
    branches:
      - feat/LIVE-2174-dynamic-cal

concurrency:
  group: bot-dyn-cal

jobs:
  start-runner:
    name: Start self-hosted EC2 runner
    runs-on: [ledger-live, linux]
    outputs:
      label: ${{ steps.start-ec2-linux-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-linux-runner.outputs.ec2-instance-id }}
    steps:
      - name: Start EC2 Linux Runner
        id: start-ec2-linux-runner
        uses: LedgerHQ/actions/ec2-linux-runner@main
        with:
          mode: start
          github-token: ${{ secrets.CI_BOT_TOKEN }}
          project: 2049
          aws-nfs-logging: true
          ami-name-filter: ledger-live-runner
          instance-volume-size: 30

  stop-runner:
    name: Stop self-hosted EC2 runner
    needs: [start-runner, run-bot]
    runs-on: [ledger-live, linux]
    timeout-minutes: 5
    steps:
      - name: Stop EC2 Linux Runner
        uses: LedgerHQ/actions/ec2-linux-runner@main
        with:
          mode: stop
          github-token: ${{ secrets.CI_BOT_TOKEN }}
          label: ${{ needs.start-runner.outputs.label }}
          ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}

  run-bot:
    runs-on: ${{ needs.start-runner.outputs.label }}
    needs: [start-runner]
    steps:
      - name: prepare runner
        run: |
          sudo growpart /dev/nvme0n1 1
          sudo resize2fs /dev/nvme0n1p1
      - uses: actions/checkout@v3
      - name: Retrieving crypto-assets
        uses: actions/checkout@v3
        with:
          submodules: true
          repository: LedgerHQ/crypto-assets
          token: ${{ secrets.CI_BOT_TOKEN }}
          path: crypto-assets
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - uses: pnpm/action-setup@v2.0.1
        id: pnpm-install
        with:
          version: latest
          run_install: false
      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: install and build
        continue-on-error: true
        run: |
          pnpm i --filter="live-cli..." --filter="ledger-live" --filter="ledger-libs" --frozen-lockfile
          pnpm build:ljs
        shell: bash
      - name: run script
        run: |
          mkdir cal
          node libs/ledgerjs/script/crypto-assets-importer/index.js $PWD/crypto-assets true
          mv libs/ledgerjs/packages/cryptoassets/data/**.json cal
      - name: Configure AWS Credentials (staging)
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_STG }}:role/ledger-live-assets-sa-role
          aws-region: eu-west-1
          role-duration-seconds: 3600
          role-session-name: ledger-live-assets-sa
      - name: Deploy json to s3
        run: aws s3 sync ./cal/ s3://ledger-live-cryptoassets-stg/cryptoassets --delete
      - name: Cache invalidate
        run: aws cloudfront create-invalidation --distribution-id E2NGFIXS9QJTH --paths "/cryptoassets/*" --debug
